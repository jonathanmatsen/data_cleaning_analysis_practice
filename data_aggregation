# using loops to aggregate data
mean_happiness = {}

unique_regions = happiness2015['Region'].unique()

for r in unique_regions:
    region_group = happiness2015[happiness2015['Region'] == r]
    region_mean = region_group['Happiness Score'].mean()

    mean_happiness[r] = region_mean

# creating group by objects

grouped = happiness2015.groupby('Region')

aus_nz = grouped.get_group('Australia and New Zealand')

# Exploring GroupBy objects
grouped = happiness2015.groupby('Region')

north_america = happiness2015.iloc[[4, 14]]

na_group = grouped.get_group('North America')

equal = north_america == na_group

# Common Aggregation Methods
grouped = happiness2015.groupby('Region')

means = grouped.mean()

# Aggregating Specific Columns with groupby
grouped = happiness2015.groupby('Region')

happy_grouped = grouped['Happiness Score']

happy_mean = happy_grouped.mean()

# Intro to agg() method
import numpy as np
grouped = happiness2015.groupby('Region')
happy_grouped = grouped['Happiness Score']
def dif(group):
    return (group.max() - group.mean())

happy_mean_max = happy_grouped.agg([np.mean, np.max])

mean_max_dif = happy_grouped.agg(dif)

# Aggregation with Pivot Tables
pv_happiness = happiness2015.pivot_table(values='Happiness Score', index='Region', aggfunc=np.mean, margins=True)

pv_happiness.plot(kind='barh', title='Mean Happiness Scores by Region', xlim=(0, 10), legend=False)

world_mean_happiness = happiness2015['Happiness Score'].mean()

# Aggregating Multiple Columns and Functions with Pivot Tables

happy_region = happiness2015.groupby('Region')
grouped = happy_region[('Happiness Score', 'Family')]
happy_family_stats = grouped.agg([np.min, np.max, np.mean])
pv_happy_family_stats = happiness2015.pivot_table(values=['Happiness Score', 'Family'], index='Region', margins=True, aggfunc=[np.min, np.max, np.mean])
